name: Build, Package and Release

on:
  workflow_dispatch:
    inputs:
      release_name:
        description: 'Name for the release'
        required: true
        type: string              

jobs:
  build_and_docker:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Update version in YAML file
      run: |
        sed -i 's|ghcr.io/stellar-expert/soroban-build-workflow:.*|ghcr.io/stellar-expert/soroban-build-workflow:${{ inputs.release_name }}|' .github/workflows/release.yml

    - name: Commit and push changes
      uses: actions/github-script@v6
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        script: |
          const fs = require('fs');
          const path = '.github/workflows/release.yml'
          // Check if file was modified
          if (fs.existsSync(path) && github.rest.git.status(['--porcelain', path]).trim()) {
            await github.rest.git.createCommit({
              owner: context.repo.owner,
              repo: context.repo.repo,
              message: `Update version to ${{ inputs.release_name }}`,
              tree: github.rest.git.hashObject({path: path, type: 'blob', w: true}).sha,
              parents: [await github.rest.git.getRef({ref: 'heads/main'}).object.sha]
            })
            // Push the commit
            await github.rest.git.push({
              ref: 'refs/heads/main',
              force: false
            })
          }

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2 

    - name: Log in to GHCR using a PAT
      uses: docker/login-action@v2  
      with:
        registry: ghcr.io
        username: ${{ github.actor }} 
        password: ${{ secrets.GITHUB_TOKEN }} 

    - name: Build and push Docker image
      uses: docker/build-push-action@v3
      with:
        context: ./docker
        push: true  
        tags: |
          ghcr.io/${{ github.repository }}:${{ github.sha }}
          ghcr.io/${{ github.repository }}:${{ inputs.release_name }}
          ghcr.io/${{ github.repository }}:latest

    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ inputs.release_name }}
        draft: false
        prerelease: false